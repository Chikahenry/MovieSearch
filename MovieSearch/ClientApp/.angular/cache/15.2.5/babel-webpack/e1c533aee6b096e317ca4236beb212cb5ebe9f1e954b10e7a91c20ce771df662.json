{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SearchMovieComponent_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class SearchMovieComponent {\n  constructor(http, baseUrl) {\n    this.forecasts = [];\n    http.get(baseUrl + 'weatherforecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n}\nSearchMovieComponent.ɵfac = function SearchMovieComponent_Factory(t) {\n  return new (t || SearchMovieComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nSearchMovieComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SearchMovieComponent,\n  selectors: [[\"app-search-movie\"]],\n  decls: 14,\n  vars: 5,\n  consts: [[\"id\", \"tableLabel\"], [\"action\", \"#\", 1, \"form\", 3, \"formGroup\"], [1, \"mb-5\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\", \"subtext__md\"], [1, \"izi-input__section\", \"izi-input__section--fw\"], [\"type\", \"text\", \"formControlName\", \"movieTitle\", 1, \"izi-input\"], [1, \"d-grid\", \"gap-2\"], [1, \"btn-primary\", \"btn-lg\", \"me-md-4\", \"ms-md-4\", 3, \"disabled\", \"click\"], [4, \"ngIf\"]],\n  template: function SearchMovieComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Movies\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching moive data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 1)(5, \"div\", 2)(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Movie title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4);\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function SearchMovieComponent_Template_button_click_11_listener() {\n        return ctx.searchMovie(ctx.searchForm.value);\n      });\n      i0.ɵɵtext(12, \" Search \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(13, SearchMovieComponent_p_13_Template, 3, 0, \"p\", 8);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.searchForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"dirty\", (ctx.movieTitle == null ? null : ctx.movieTitle.dirty) && (ctx.movieTitle == null ? null : ctx.movieTitle.invalid));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.searchForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.movie);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAqBAA,yBAAkB;IAAIA,0BAAU;IAAAA,iBAAK;;;ACdrC,OAAM,MAAOC,oBAAoB;EAG/BC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,cAAS,GAAsB,EAAE;IAGtCD,IAAI,CAACE,GAAG,CAAoBD,OAAO,GAAG,iBAAiB,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC1E,IAAI,CAACC,SAAS,GAAGD,MAAM;IACzB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAPWR,oBAAoB;mBAApBA,oBAAoB,4DAGO,UAAU;AAAA;AAHrCA,oBAAoB;QAApBA,oBAAoB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPjCf,6BAAoB;MAAAA,sBAAM;MAAAA,iBAAK;MAE/BA,yBAAG;MAAAA,gFAAgE;MAAAA,iBAAI;MAEvEA,+BAAuD;MAEiBA,2BAAW;MAAAA,iBAAQ;MACrFA,8BAAuD;MACnDA,2BAE6D;MACjEA,iBAAM;MAGVA,+BAA0B;MACdA;QAAA,OAASgB,qCAA6B;MAAA,EAAC;MAC3ChB,yBACJ;MAAAA,iBAAS;MAIfA,mEAAyC;;;MAjBXA,eAAwB;MAAxBA,0CAAwB;MAMxCA,eAAwD;MAAxDA,2IAAwD;MAK2BA,eAA+B;MAA/BA,iDAA+B;MAM5HA,eAAY;MAAZA,iCAAY","names":["i0","SearchMovieComponent","constructor","http","baseUrl","get","subscribe","result","forecasts","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Chika Ejiofor\\Desktop\\chika\\MovieSearch\\MovieSearch\\ClientApp\\src\\app\\search-movie\\search-movie.component.html","C:\\Users\\Chika Ejiofor\\Desktop\\chika\\MovieSearch\\MovieSearch\\ClientApp\\src\\app\\search-movie\\search-movie.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Movies</h1>\r\n\r\n<p>This component demonstrates fetching moive data from the server.</p>\r\n\r\n<form action=\"#\" class=\"form\" [formGroup]=\"searchForm\">\r\n  <div class=\"mb-5\">\r\n      <label for=\"exampleInputPassword1\" class=\"form-label subtext__md\">Movie title</label>\r\n      <div class=\"izi-input__section izi-input__section--fw\">\r\n          <input type=\"text\" class=\"izi-input\"\r\n              formControlName=\"movieTitle\"\r\n              [class.dirty]=\"movieTitle?.dirty && movieTitle?.invalid\">\r\n      </div>\r\n  </div>\r\n\r\n  <div class=\"d-grid gap-2\">\r\n      <button (click)=\"searchMovie(searchForm.value)\" class=\"btn-primary btn-lg me-md-4 ms-md-4\" [disabled]=\"searchForm.invalid\">\r\n          Search\r\n      </button>\r\n  </div>\r\n</form>\r\n\r\n<p *ngIf=\"!movie\"><em>Loading...</em></p>\r\n\r\n<!-- <table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table> -->\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-search-movie',\r\n  templateUrl: './search-movie.component.html'\r\n})\r\nexport class SearchMovieComponent {\r\n  public forecasts: WeatherForecast[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}